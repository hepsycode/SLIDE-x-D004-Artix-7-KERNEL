 ==  Bambu executed with: bambu -O1 -fcse-follow-jumps -fno-tree-ter -ftree-vectorize -I/home/ubuntu/Desktop/SLIDE-x-Repository/SLIDE-x/SLIDE-x-AGGR-RESULTS/KERNEL_INT/banker_algorithm/includes/values_5 --simulate --simulator=VERILATOR --clock-period=5 --device-name=xc7a100t-1csg324-VVD /home/ubuntu/Desktop/SLIDE-x-Repository/SLIDE-x//SLIDE-x-BENCH/KERNEL/banker_algorithm/frst.c 


********************************************************************************
                    ____                  _
                   | __ )  __ _ _ __ ___ | |_   _   _
                   |  _ \ / _` | '_ ` _ \| '_ \| | | |
                   | |_) | (_| | | | | | | |_) | |_| |
                   |____/ \__,_|_| |_| |_|_.__/ \__,_|

********************************************************************************
                         High-Level Synthesis Tool

                         Politecnico di Milano - DEIB
                          System Architectures Group
********************************************************************************
                Copyright (C) 2004-2020 Politecnico di Milano
Version: PandA 0.9.7-dev - Revision 151822f6eb6b28b68ef7cde4c7c3c0add185ed9d-panda-0.9.7-dev

Target technology = FPGA
  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  The top function inferred from the specification is: main
  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

  Functions to be synthesized:
    create_needs
    banker_algorithm
    main


  Memory allocation information:
    BRAM bitsize: 128
    Spec may not exploit DATA bus width
    All the data have a known address
    Internal data may be accessed
    DATA bus bitsize: 128
    ADDRESS bus bitsize: 10
    SIZE bus bitsize: 8
    ALL pointers have been resolved
    Internally allocated memory (no private memories): 896
    Internally allocated memory: 896
  Time to perform memory allocation: 0.00 seconds


  Module allocation information for function banker_algorithm:
    Number of complex operations: 0
    Number of complex operations: 0
  Time to perform module allocation: 0.08 seconds


  Module allocation information for function create_needs:
    Number of complex operations: 0
    Number of complex operations: 0
  Time to perform module allocation: 0.06 seconds


  Scheduling Information of function banker_algorithm:
    Number of control steps: 15
    Minimum slack: 5.0000000000000003e-10
    Estimated max frequency (MHz): 200.00000002000002
  Time to perform scheduling: 0.02 seconds


  State Transition Graph Information of function banker_algorithm:
    Number of states: 13
    Done port is registered
  Time to perform creation of STG: 0.00 seconds


  Scheduling Information of function create_needs:
    Number of control steps: 13
    Minimum slack: 5.0000000000000003e-10
    Estimated max frequency (MHz): 200.00000002000002
  Time to perform scheduling: 0.03 seconds


  State Transition Graph Information of function create_needs:
    Number of states: 11
    Done port is registered
  Time to perform creation of STG: 0.00 seconds


  Easy binding information for function banker_algorithm:
    Bound operations:52/77
  Time to perform easy binding: 0.00 seconds


  Easy binding information for function create_needs:
    Bound operations:55/67
  Time to perform easy binding: 0.00 seconds


  Storage Value Information of function banker_algorithm:
    Number of storage values inserted: 32
  Time to compute storage value information: 0.00 seconds


  Storage Value Information of function create_needs:
    Number of storage values inserted: 25
  Time to compute storage value information: 0.00 seconds


  Register binding information for function banker_algorithm:
    Register allocation algorithm obtains a sub-optimal result: 26 registers(LB:23)
  Time to perform register binding: 0.00 seconds


  Register binding information for function banker_algorithm:
    Register allocation algorithm obtains a sub-optimal result: 27 registers(LB:23)
  Time to perform register binding: 0.01 seconds


  Module binding information for function banker_algorithm:
    Number of modules instantiated: 75
    Number of possible conflicts for possible false paths introduced by resource sharing: 0
    Estimated resources area (no Muxes and address logic): 2320
    Estimated area of MUX21: 165
    Total estimated area: 2485
    Estimated number of DSPs: 0
    Slack computed in 0.00 seconds
    False-loop computation completed in 0.00 seconds
    Weight computation completed in 0.00 seconds
    Clique covering computation completed in 0.01 seconds
  Time to perform module binding: 0.01 seconds


  Register binding information for function banker_algorithm:
    Register allocation algorithm obtains a sub-optimal result: 27 registers(LB:23)
  Time to perform register binding: 0.00 seconds


  Connection Binding Information for function banker_algorithm:
    Number of allocated multiplexers (2-to-1 equivalent): 14
  Time to perform interconnection binding: 0.00 seconds

  Total number of flip-flops in function banker_algorithm: 529

  Register binding information for function create_needs:
    Register allocation algorithm obtains a sub-optimal result: 23 registers(LB:14)
  Time to perform register binding: 0.00 seconds


  Register binding information for function create_needs:
    Register allocation algorithm obtains a sub-optimal result: 23 registers(LB:14)
  Time to perform register binding: 0.00 seconds


  Module binding information for function create_needs:
    Number of modules instantiated: 67
    Number of possible conflicts for possible false paths introduced by resource sharing: 0
    Estimated resources area (no Muxes and address logic): 804
    Estimated area of MUX21: 297
    Total estimated area: 1101
    Estimated number of DSPs: 0
    Slack computed in 0.00 seconds
    False-loop computation completed in 0.00 seconds
    Weight computation completed in 0.00 seconds
    Clique covering computation completed in 0.00 seconds
  Time to perform module binding: 0.00 seconds


  Register binding information for function create_needs:
    Register allocation algorithm obtains a sub-optimal result: 23 registers(LB:14)
  Time to perform register binding: 0.00 seconds


  Connection Binding Information for function create_needs:
    Number of allocated multiplexers (2-to-1 equivalent): 11
  Time to perform interconnection binding: 0.00 seconds

  Total number of flip-flops in function create_needs: 734

  Module allocation information for function main:
error -> clock constraint too tight: BRAMs for this device cannot run so fast... (ARRAY_1D_STD_BRAM_NN:5.1989999999999998>5)
	virtual void allocation::IntegrateTechnologyLibraries()
	../../../src/HLS/module_allocation/allocation.cpp:2349
Please report bugs to <panda-info@polimi.it>

